{% macro destination(id, runner, container_type=None, force_container=False) -%}
    <destination id="{{ id }}" runner="{{ runner }}">
        <env file="{{ galaxy_venv_dir }}/bin/activate"/>
        {% if galaxy_source_shellrc %}
            <env file="{{ galaxy_user_shellrc }}" />
        {% endif %}
        <param id="enabled" from_environ="GALAXY_RUNNERS_ENABLE_{{ runner|upper }}">true</param>

        {% if container_type == 'docker' %}
            <param id="docker_enabled">true</param>
            <param id="docker_sudo" from_environ="GALAXY_DOCKER_SUDO">{{ galaxy_docker_sudo }}</param>
            <!-- The empty volumes from shouldn't affect Galaxy, set GALAXY_DOCKER_VOLUMES_FROM to use. -->
            <param id="docker_volumes_from" from_environ="GALAXY_DOCKER_VOLUMES_FROM">{{ galaxy_docker_volumes_from }}</param>
            <!-- For a stock Galaxy instance and traditional job runner $defaults will expand out as: $galaxy_root:ro,$tool_directory:ro,$working_directory:rw,$default_file_path:rw -->
            <param id="docker_volumes" from_environ="GALAXY_DOCKER_VOLUMES">{{ galaxy_docker_volumes }}</param>
            {% if force_container %}
                <param id="docker_default_container_id" from_environ="GALAXY_DOCKER_DEFAULT_CONTAINER">{{ galaxy_docker_default_image }}</param>
            {% endif %}
        {% endif %}

        {% if container_type == 'singularity' %}
            <param id="singularity_enabled">true</param>
            <param id="singularity_sudo" from_environ="GALAXY_SINGULARITY_SUDO">{{ galaxy_singularity_sudo }}</param>
            <!-- The empty volumes from shouldn't affect Galaxy, set GALAXY_SINGULARITY_VOLUMES_FROM to use. -->
            <param id="singularity_volumes_from" from_environ="GALAXY_SINGULARITY_VOLUMES_FROM">{{ galaxy_singularity_volumes_from }}</param>
            <!-- For a stock Galaxy instance and traditional job runner $defaults will expand out as: $galaxy_root:ro,$tool_directory:ro,$working_directory:rw,$default_file_path:rw -->
            <param id="singularity_volumes" from_environ="GALAXY_SINGULARITY_VOLUMES">{{ galaxy_singularity_volumes }}</param>
            {% if force_container %}
                <param id="singularity_default_container_id" from_environ="GALAXY_SINGULARITY_DEFAULT_CONTAINER">{{ galaxy_singularity_default_image }}</param>
            {% endif %}

        {% endif %}

        {{ caller() }}
    </destination>
{%- endmacro %}

{% macro docker_dispatch_destination(id, default_destination, docker_destination) -%}
    <destination id="{{ id }}" runner="dynamic">
        <param id="type">docker_dispatch</param>
        <param id="docker_destination_id">{{ docker_destination }}</param>
        <param id="default_destination_id">{{ default_destination }}</param>
    </destination>
{%- endmacro %}

{% macro singularity_dispatch_destination(id, default_destination, singularity_destination) -%}
    <destination id="{{ id }}" runner="dynamic">
        <param id="type">singularity_dispatch</param>
        <param id="singularity_destination_id">{{ singularity_destination }}</param>
        <param id="default_destination_id">{{ default_destination }}</param>
    </destination>
{%- endmacro %}
