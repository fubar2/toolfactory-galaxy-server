{
    "a_galaxy_workflow": "true",
    "annotation": "",
    "format-version": "0.1",
    "name": "ToolFactory - make and install demonstration tools June 3",
    "steps": {
        "0": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 0,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 63.19999694824219,
                "height": 82.19999694824219,
                "left": 88.5,
                "right": 288.5,
                "top": -19,
                "width": 200,
                "x": 88.5,
                "y": -19
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"swi-prolog\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"swipl -q -g main -s \", \"dynScript\": \"parent(pam,bob).\\nparent(tom,bob).\\nparent(tom,liz).\\nparent(bob,ann).\\nparent(bob,pat).\\nparent(pat,jim).\\n\\nmain :-\\n    parent(X,jim),\\n    format('~a is the parent of jim~n', [X]),\\n    halt.\"}}, \"help_text\": \"**What it Does**\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"prolog_out\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"\", \"tool_name\": \"prolog_demo\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "49c1aece-2eb2-414f-a33d-35bec26ba7c8",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "abb6951e-f7fa-4a22-8223-647727c67539"
                }
            ]
        },
        "1": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 1,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "hello_lisp.txt"
                }
            ],
            "label": "hello_lisp.txt",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "bottom": 198.8000030517578,
                "height": 61.80000305175781,
                "left": 88.5,
                "right": 288.5,
                "top": 137,
                "width": 200,
                "x": 88.5,
                "y": 137
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "af3f8635-82e0-4ee1-acd2-b6455c8b4574",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "output",
                    "uuid": "b94b77db-57b4-4171-b795-3c779e487115"
                }
            ]
        },
        "2": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 2,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 63.19999694824219,
                "height": 82.19999694824219,
                "left": 366.5,
                "right": 566.5,
                "top": -19,
                "width": 200,
                "x": 366.5,
                "y": -19
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"# pathetic attempt at a malicious script in Galaxy\\n# it fails because the job execution environment gives write access to few places\\necho \\\"ls -la\\\"\\nls -la\\ncd /\\necho \\\"ls -la after changing to /\\\"\\nls -la\\ntouch \\\"foo_was.here\\\"\\necho \\\"ls -la in root after touch foo_was.here - foo_was_not.here more like it\\\"\\nls -la\\n\"}}, \"help_text\": \"**What it Does**\\nShows what you can't do with a bash script\\nCheck the tool stderr - it isn't captured but should be. Send code.\\nResults vary - in a biocontainer, you are root so can do anything.\\nIn a normal Galaxy, not so much.\\nThis is a very interesting way to see what a tool can do on your machine.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"evil_script_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"sim_size:0.05\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"Tries some naughty things\", \"tool_name\": \"evil_script_that_fails\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "5a02141e-b2ac-4aa9-903d-1c6f6ae1c153",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "d4ef526e-6f9f-4450-87c3-5adbb468f63e"
                }
            ]
        },
        "3": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 3,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 528.1999969482422,
                "height": 82.19999694824219,
                "left": 88.5,
                "right": 288.5,
                "top": 446,
                "width": 200,
                "x": 88.5,
                "y": 446
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"echo \\\"Hello $1\\\"\"}}, \"help_text\": \"**What it Does**\\nA bash script Hello World in Galaxy generated by the ToolFactory\", \"install\": \"false\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"Hello_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"say_hello_to\", \"ap_type\": {\"param_type\": \"text\", \"__current_case__\": 0, \"param_value\": \"ToolFactory!!\"}, \"param_label\": \"Say hello to\", \"param_help\": \"\", \"param_CL\": \"1\", \"param_CLprefixed\": \"\", \"param_repeat\": \"false\"}]}}}, \"run_test\": \"true\", \"tool_desc\": \"Says Hello!\", \"tool_name\": \"hello_toolshed\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "8f1fb041-2d13-4e20-8e37-4a79a30ebd63",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "5f94c7d4-75d8-4c56-925d-ef947365dd6d"
                }
            ]
        },
        "4": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 4,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 63.19999694824219,
                "height": 82.19999694824219,
                "left": 644.5,
                "right": 844.5,
                "top": -19,
                "width": 200,
                "x": 644.5,
                "y": -19
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"r-base\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"Rscript\", \"dynScript\": \"# demo\\nargs = commandArgs(trailingOnly=TRUE)\\nif (length(args)==0) {\\n   n_plots = 3 \\n} else {\\n   n_plots = as.integer(args[1]) }\\ndir.create('plots')\\nfor (i in 1:n_plots) {\\n    foo = runif(100)\\n    bar = rnorm(100)\\n    bar = foo + 0.05*bar\\n    pdf(paste('plots/yet',i,\\\"anotherplot.pdf\\\",sep='_'))\\n    plot(foo,bar,main=paste(\\\"Foo by Bar plot #\\\",i),col=\\\"maroon\\\", pch=3,cex=0.6)\\n    dev.off()\\n    foo = data.frame(a=runif(100),b=runif(100),c=runif(100),d=runif(100),e=runif(100),f=runif(100))\\n    bar = as.matrix(foo)\\n    pdf(paste('plots/yet',i,\\\"anotherheatmap.pdf\\\",sep='_'))\\n    heatmap(bar,main='Random Heatmap')\\n    dev.off()\\n}\\n\"}}, \"help_text\": \"**What it Does**\\nToolFactory demonstration of a collection to hide lots of outputs from a tool in a single history item to avoid clutter.\\nAs many random plots as you want.\\nViewable inside the resulting history collection\\nScript is responsible for writing all the appropriate outputs into a directory called the same name as the collection as shown here.\\nVery handy for things not useful downstream but useful for the user to review and study.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [], \"collection_outputs\": [{\"__index__\": 0, \"name\": \"plots\", \"kind\": \"list\", \"label\": \"Plots\", \"discover\": \"__name_and_ext__\"}]}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"nplot\", \"ap_type\": {\"param_type\": \"text\", \"__current_case__\": 0, \"param_value\": \"3\"}, \"param_label\": \"Number of random plots pairs to draw\", \"param_help\": \"\", \"param_CL\": \"1\", \"param_CLprefixed\": \"\", \"param_repeat\": \"false\"}]}}}, \"run_test\": \"true\", \"tool_desc\": \"Collection demonstration\", \"tool_name\": \"plotter\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "5ac95833-4250-4fcf-b1a4-98c9dadc26d2",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "54696143-f4d5-4cfe-aa64-bb90546afcec"
                }
            ]
        },
        "5": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 5,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "rgToolFactory2.py"
                }
            ],
            "label": "rgToolFactory2.py",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "bottom": 700.1999969482422,
                "height": 82.19999694824219,
                "left": 644.5,
                "right": 844.5,
                "top": 618,
                "width": 200,
                "x": 644.5,
                "y": 618
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "cc869600-8a14-4972-b6ea-98ea7ec5f92a",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "output",
                    "uuid": "4ac9e5be-dce3-4c10-a51d-1424c3824a7c"
                }
            ]
        },
        "6": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 6,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 63.19999694824219,
                "height": 82.19999694824219,
                "left": 922.5,
                "right": 1122.5,
                "top": -19,
                "width": 200,
                "x": 922.5,
                "y": -19
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"echo \\\"You chose $1\\\"\"}}, \"help_text\": \"**What it Does**\\nDemonstrates select parameters generated by ToolFactory forms\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"select_out\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"choose\", \"ap_type\": {\"param_type\": \"selecttext\", \"__current_case__\": 4, \"selectTexts\": [{\"__index__\": 0, \"select_text\": \"one\", \"select_value\": \"won\"}, {\"__index__\": 1, \"select_text\": \"two\", \"select_value\": \"too\"}, {\"__index__\": 2, \"select_text\": \"three\", \"select_value\": \"free\"}]}, \"param_label\": \"Choose\", \"param_help\": \"\", \"param_CL\": \"1\", \"param_CLprefixed\": \"\", \"param_repeat\": \"false\"}]}}}, \"run_test\": \"true\", \"tool_desc\": \"ToolFactory select demonstration\", \"tool_name\": \"select_test\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "c430ef3a-7f7d-47be-9bb4-99d810098302",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "90b2a7c8-099b-40f1-ae10-a746f5d4b835"
                }
            ]
        },
        "7": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 7,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "phiX.fasta"
                }
            ],
            "label": "phiX.fasta",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "bottom": 173.8000030517578,
                "height": 61.80000305175781,
                "left": 922.5,
                "right": 1122.5,
                "top": 112,
                "width": 200,
                "x": 922.5,
                "y": 112
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "cb797a0f-b1a0-4b34-a20a-2f8cb0ec1d28",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "output",
                    "uuid": "a8bc1bf9-ee57-42c8-b623-3c404859950c"
                }
            ]
        },
        "8": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 8,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "bwa-mem-fastq1.fq"
                }
            ],
            "label": "bwa-mem-fastq1.fq",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "bottom": 538.1999969482422,
                "height": 82.19999694824219,
                "left": 1200.5,
                "right": 1400.5,
                "top": 456,
                "width": 200,
                "x": 1200.5,
                "y": 456
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "816d28be-3e5d-442c-99f6-def262bb75ee",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "output",
                    "uuid": "96a280c3-a22b-4742-850b-5173c64ebd00"
                }
            ]
        },
        "9": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 9,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "bwa-mem-mt-genome.fa"
                }
            ],
            "label": "bwa-mem-mt-genome.fa",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "bottom": 658.1999969482422,
                "height": 82.19999694824219,
                "left": 1200.5,
                "right": 1400.5,
                "top": 576,
                "width": 200,
                "x": 1200.5,
                "y": 576
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "463b272f-bd39-4ce3-b579-bfca912a547e",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "output",
                    "uuid": "7c166f0e-6a50-4703-99a1-cc21a5ac23c2"
                }
            ]
        },
        "10": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 10,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 1,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 235,
                "height": 134,
                "left": 366.5,
                "right": 566.5,
                "top": 101,
                "width": 200,
                "x": 366.5,
                "y": 101
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"sbcl\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"sbcl --script $1\"}}, \"help_text\": \"**What it Does**\\nSays hello world using a trivial lisp script.\\nIt will actually try to run any text file you like from your history but likely fail unless they happen to be valid lisp according to the interpreter dependency.\\nThese demonstrations show what is possible, not what is sensible.\\nPlease don't expose this anywhere.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"SBCL Lisp script to execute\", \"input_help\": \"Provide a script in lisp to be interpreted by SBCL\", \"input_CL\": \"1\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"lisp_out\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"ToolFactory demonstration using Lisp for the nostalgic.\", \"tool_name\": \"lisp_demo\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "64202492-0f2e-4e52-aeb3-a85e4b598bb1",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "c28d5fb1-3861-4e32-8c5f-a786f67dfa35"
                }
            ]
        },
        "11": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 11,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 3,
                    "output_name": "generated_xml"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 579,
                "height": 134,
                "left": 366.5,
                "right": 566.5,
                "top": 445,
                "width": 200,
                "x": 366.5,
                "y": 445
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"planemo=0.74.3, python=3.7, lxml=4.6.3\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"python\", \"dynScript\": \"## python version of a planemo XML linter\\nimport lxml.etree as ET\\nimport os\\nimport subprocess\\nimport sys\\nimport shutil\\n\\ndef main():\\n    assert len(sys.argv) >= 2, 'Must have input xml on command line'\\n    xmlin = sys.argv[1]\\n    tree = ET.parse(xmlin)\\n    root = tree.getroot()\\n    toolname = root.get('id')\\n    txml = '%s.xml' % toolname\\n    shutil.copy(xmlin,txml)\\n    cl = ['planemo', 'lint', txml]\\n    print('Running', cl)\\n    p = subprocess.run(cl, shell=False)\\n    if p.returncode > 0:\\n         print('Planemo lint call returned error %d')\\n    else:\\n         print('Lint report ends')\\nmain()\\n\"}}, \"help_text\": \"**What it Does**\\nToolFactory demonstration script using python to run planemo lint from a ToolFactory generated XML\\nCompare with the simpler bash version.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"RuntimeValue\"}, \"input_formats\": [\"xml\"], \"input_label\": \"Toolshed XML to be linted\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"lint_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:5\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"Planemo lint using python on a ToolFactory generated XML\", \"tool_name\": \"planemo_lint_python\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "6533b9eb-e61d-4675-bbfa-a87c8853b46b",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "a19d538d-59d9-40fd-86c4-3b7beb23499f"
                }
            ]
        },
        "12": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 12,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 3,
                    "output_name": "generated_xml"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 751,
                "height": 134,
                "left": 366.5,
                "right": 566.5,
                "top": 617,
                "width": 200,
                "x": 366.5,
                "y": 617
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"planemo=0.74.3\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"cp $1 ./testme.xml\\n# planemo will only lint a file with xml extension\\nplanemo lint \\\"./testme.xml\\\"  \\necho 'Lint report ends'\"}}, \"help_text\": \"**What it Does**\\nToolFactory demonstration script using bash to run planemo lint using bash\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"xml\"], \"input_label\": \"Toolshed XML to be linted\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"lint_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:4\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"Runs Planemo lint on a ToolFactory generated XML file\", \"tool_name\": \"planemo_lint_bash\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "0d143630-2ee1-47dd-93f2-7e32434028f7",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "2a267390-0e5f-4565-b00e-9ad47033a3b0"
                }
            ]
        },
        "13": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 13,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 5,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 579,
                "height": 134,
                "left": 922.5,
                "right": 1122.5,
                "top": 445,
                "width": 200,
                "x": 922.5,
                "y": 445
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"python\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"python\", \"dynScript\": \"## reverse order of text by row\\n## ToolFactory demonstration\\n## positional parameters\\nimport sys\\ninp = sys.argv[1]\\noutp = sys.argv[2]\\ni = open(inp,'r').readlines()\\no = open(outp,'w')\\nfor row in i:\\n  rs = row.rstrip()\\n  rs = list(rs)\\n  rs.reverse()\\n  o.write(''.join(rs))\\n  o.write('\\\\n')\\no.close()\"}}, \"help_text\": \"**What it Does**\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"Input text file to be reversed\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"pyrev_positionalparse_output\", \"history_format\": \"txt\", \"history_CL\": \"2\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"\", \"tool_name\": \"pyrev_pos_test\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "b019184a-3d5b-4659-97f9-06a596706d6b",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "99e16593-69c5-49f5-9219-8c7dd27b1ed2"
                }
            ]
        },
        "14": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 14,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 5,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 751,
                "height": 134,
                "left": 922.5,
                "right": 1122.5,
                "top": 617,
                "width": 200,
                "x": 922.5,
                "y": 617
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"python\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"python\", \"dynScript\": \"# reverse order of text by row\\nimport argparse\\nparser = argparse.ArgumentParser()\\na = parser.add_argument\\na('--infile',default='')\\na('--pyrevargparse_outfile',default=None)\\nargs = parser.parse_args()\\ninp = args.infile\\noutp = args.pyrevargparse_outfile\\ni = open(inp,'r').readlines()\\no = open(outp,'w')\\nfor row in i:\\n  rs = row.rstrip()\\n  rs = list(rs)\\n  rs.reverse()\\n  o.write(''.join(rs))\\n  o.write('\\\\n')\\no.close()\"}}, \"help_text\": \"**What it Does**\\nDemonstrates argparse - script must correctly parse the names given on the form for this to work.\\nArgparse argument names your script should expect are constructed according to the parameter type - please read the tool form carefully.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"argparse\", \"__current_case__\": 0, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"input file to be reversed\", \"input_help\": \"\", \"input_CL\": \"infile\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"pyrevargparse_outfile\", \"history_format\": \"txt\", \"history_CL\": \"pyrevargparse_outfile\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"ToolFactory demonstration python script with argparse parameters\", \"tool_name\": \"pyrev_argparse_test\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "8c288646-8354-4871-82a3-150b27177eb2",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "bf4bd3c6-ae4c-4e81-bea5-ce14ecea09e4"
                }
            ]
        },
        "15": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 15,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 5,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 923,
                "height": 134,
                "left": 922.5,
                "right": 1122.5,
                "top": 789,
                "width": 200,
                "x": 922.5,
                "y": 789
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"tac | rev\"}}, \"help_text\": \"**What it Does**\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"0\", \"__current_case__\": 2, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"Input text file to be reversed\", \"input_help\": \"\", \"input_CL\": \"STDIN\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"tacrev_reversed_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"\", \"tool_name\": \"tacrev\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "f99df627-0779-4b38-8551-11f2905b8daf",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "19942f87-70d3-4740-93b3-1dc7cdaf1ec0"
                }
            ]
        },
        "16": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 16,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 7,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 235,
                "height": 134,
                "left": 1200.5,
                "right": 1400.5,
                "top": 101,
                "width": 200,
                "x": 1200.5,
                "y": 101
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"sed\", \"usescript\": {\"choosescript\": \"no\", \"__current_case__\": 0, \"dynScript\": \"\", \"scriptrunner\": \"\"}}, \"help_text\": \"**What it Does**\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"Input text to be edited\", \"input_help\": \"\", \"input_CL\": \"2\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"sedtest_edited_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"sedstring\", \"ap_type\": {\"param_type\": \"text\", \"__current_case__\": 0, \"param_value\": \"s/A/Abjork!/g\"}, \"param_label\": \"sed edit string - subsitute some text for some other text globally\", \"param_help\": \"\", \"param_CL\": \"1\", \"param_CLprefixed\": \"\", \"param_repeat\": \"false\"}]}}}, \"run_test\": \"false\", \"tool_desc\": \"\", \"tool_name\": \"sedtest_toolshed\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "195c88d9-52bf-4a63-81b8-109f9b21f3b7",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "8ab83741-6a24-4d68-9af3-a37aec7d319a"
                }
            ]
        },
        "17": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 17,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 7,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 407,
                "height": 134,
                "left": 1200.5,
                "right": 1400.5,
                "top": 273,
                "width": 200,
                "x": 1200.5,
                "y": 273
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"perl\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"perl\", \"dynScript\": \"#!/usr/bin/perl -w\\n\\n# usage : perl toolExample.pl <FASTA file> <output file>\\n\\nopen (IN, \\\"<$ARGV[0]\\\");\\nopen (OUT, \\\">$ARGV[1]\\\");\\nwhile (<IN>) {\\n    chop;\\n    if (m/^>/) {\\n        s/^>//;\\n        if ($. > 1) {\\n            print OUT sprintf(\\\"%.3f\\\", $gc/$length) . \\\"\\\\n\\\";\\n        }\\n        $gc = 0;\\n        $length = 0;\\n    } else {\\n        ++$gc while m/[gc]/ig;\\n        $length += length $_;\\n    }\\n}\\nprint OUT sprintf(\\\"%.3f\\\", $gc/$length) . \\\"\\\\n\\\";\\nclose( IN );\\nclose( OUT );\"}}, \"help_text\": \"**What it Does**\\nPerl is also possible.\\nIt is also hard to maintain but we are a welcoming community so have it your way if you must.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fasta\"], \"input_label\": \"Input fasta for GC estimate\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"perl_gc_output\", \"history_format\": \"txt\", \"history_CL\": \"2\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"Perl script demonstration\", \"tool_name\": \"perl_gc_counter\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "108bb82c-3a69-4468-b5c0-435f1657dd30",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "9fa72724-890e-441a-b23a-1b061e833409"
                }
            ]
        },
        "18": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 18,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 9,
                    "output_name": "output"
                },
                "io_param|ppass|io|history_inputs_1|input_files": {
                    "id": 8,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 670.6000061035156,
                "height": 225.60000610351562,
                "left": 1488.5,
                "right": 1688.5,
                "top": 445,
                "width": 200,
                "x": 1488.5,
                "y": 445
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"bwa=0.7.15, samtools=1.3\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"REFFILE=$1\\nFASTQ=$2\\nBAMOUT=$3\\nrm -f \\\"refalias\\\"\\nln -s \\\"$REFFILE\\\" \\\"refalias\\\"\\nbwa index -a is \\\"refalias\\\"\\nbwa mem -t \\\"2\\\"  -v 1 \\\"refalias\\\" \\\"$FASTQ\\\"  > tempsam\\nsamtools view -Sb tempsam > temporary_bam_file.bam\\nsamtools sort -o \\\"$BAMOUT\\\" temporary_bam_file.bam\\n\"}}, \"help_text\": \"**What it Does**\\nSame thing as the command over-ride version but using a bash script and passing parameters.\\nProbably more familiar to many non-Galaxy developers.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fasta\"], \"input_label\": \"Reference sequence to map reads against\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": \"false\"}, {\"__index__\": 1, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fastq\"], \"input_label\": \"Reads to map\", \"input_help\": \"\", \"input_CL\": \"2\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"bwa_test_bash_output\", \"history_format\": \"bam\", \"history_CL\": \"3\", \"history_test\": \"sim_size:0.1\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"Bash script equivalent of the bwa command over-ride.\", \"tool_name\": \"bwa_test_toolfactory_positional_bash\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "eb0e28cf-1be4-401c-bdd3-f3cb1f1a84cc",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "12c3e64f-35ff-490e-b64e-9b1e0e640291"
                }
            ]
        },
        "19": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 19,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 9,
                    "output_name": "output"
                },
                "io_param|ppass|io|history_inputs_1|input_files": {
                    "id": 8,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 914.1999969482422,
                "height": 205.1999969482422,
                "left": 1488.5,
                "right": 1688.5,
                "top": 709,
                "width": 200,
                "x": 1488.5,
                "y": 709
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"chromInfo\": \"/galaxy-central/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"yes\", \"__current_case__\": 1, \"command_override\": \"## Build reference\\nln -s \\\"$ref_file\\\" \\\"localref.fa\\\" ;\\nbwa index -a is \\\"localref.fa\\\" ;\\nbwa mem -t 2 -v 1 \\\"localref.fa\\\" \\\"$fastq_input1\\\"  | samtools view -Sb - > temporary_bam_file.bam ;\\nsamtools sort -o \\\"$bwa_test_commover_bam_output\\\" temporary_bam_file.bam\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"bwa=0.7.15, samtools=1.3\", \"usescript\": {\"choosescript\": \"no\", \"__current_case__\": 0, \"dynScript\": \"\", \"scriptrunner\": \"\"}}, \"help_text\": \"**What it Does**\\nTrivial example from a Planemo documentation example\\nIt can be useful. It is sort of bash with substitutions from the tool form.\\nIf you need it, it's here.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"argparse\", \"__current_case__\": 0, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fasta\"], \"input_label\": \"Reference sequence to align reads\", \"input_help\": \"\", \"input_CL\": \"ref_file\", \"input_repeat\": \"false\"}, {\"__index__\": 1, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fastqsanger\"], \"input_label\": \"Fastqsanger file containing reads to be mapped against reference\", \"input_help\": \"\", \"input_CL\": \"fastq_input1\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"bwa_test_commover_bam_output\", \"history_format\": \"bam\", \"history_CL\": \"\", \"history_test\": \"sim_size:0.1\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"Command over-ride demonstration\", \"tool_name\": \"bwa_test_command_override\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "42da8fc9-9f6f-40a4-9c3b-5199e8d9d5ff",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "bd2d06f9-5292-4623-8ecd-973a135c8d88"
                }
            ]
        },
        "20": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 20,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 10,
                    "output_name": "generated_xml"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 260,
                "height": 134,
                "left": 644.5,
                "right": 844.5,
                "top": 126,
                "width": 200,
                "x": 644.5,
                "y": 126
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "5bf1cedca36c",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"python\", \"dynScript\": \"import argparse\\nparser = argparse.ArgumentParser()\\na = parser.add_argument\\na(\\\"--mi\\\", action=\\\"append\\\")\\na(\\\"--mp\\\", action=\\\"append\\\")\\nargs = parser.parse_args()\\nif args.mi:\\n   print(\\\" file and \\\".join(args.mi))\\nif args.mp:\\n   print(\\\" string and \\\".join(args.mp))\\nif not (args.mi or args.mp):\\n   print('Nothing was selected')\"}}, \"help_text\": \"**What it Does**\\nSimple python Argparse sample to echo repeated user selections - how to use repeated inputs and user parameters.\\nUnpredictable or messy \\\"repeated\\\" outputs can use a collection if they are not useful downstream but otherwise require manual wrapping - see the GTN advanced tutorial.\", \"install\": null, \"io_param\": {\"ppass\": {\"parampass\": \"argparse\", \"__current_case__\": 0, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"html\", \"txt\", \"xml\"], \"input_label\": \"Multiple input files from your history - as many as you like\", \"input_help\": \"\", \"input_CL\": \"mi\", \"input_repeat\": \"true\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"repeats_out\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:6\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"mp\", \"ap_type\": {\"param_type\": \"text\", \"__current_case__\": 0, \"param_value\": \"Multiple user supplied text strings - as many different ones as you like\"}, \"param_label\": \"Multiple user supplied text strings - as many different ones as you like\", \"param_help\": \"\", \"param_CL\": \"mp\", \"param_CLprefixed\": \"\", \"param_repeat\": \"true\"}]}}}, \"run_test\": null, \"tool_desc\": \"Repeated parameter demonstration\", \"tool_name\": \"repeats_demo\", \"tool_version\": \"2.00\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "1ffb576d-a643-419d-ad6e-d4c777ee11ef",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "9d00dce7-fdf2-4318-83f8-8cadbfedcf0f"
                }
            ]
        }
    },
    "tags": [],
    "uuid": "f92ad955-4d49-4b3c-82a7-73c777c2db24",
    "version": 1
}
