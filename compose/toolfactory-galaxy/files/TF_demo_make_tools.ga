{
    "a_galaxy_workflow": "true",
    "annotation": "",
    "format-version": "0.1",
    "name": "ToolFactory - make, test and install demonstration tools May 29",
    "steps": {
        "0": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 0,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "hello_lisp.txt"
                }
            ],
            "label": "hello_lisp.txt",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "bottom": -38.69999694824219,
                "height": 61.80000305175781,
                "left": 252.5,
                "right": 452.5,
                "top": -100.5,
                "width": 200,
                "x": 252.5,
                "y": -100.5
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "fdd95ecf-f0ba-4bca-9173-651d218284b5",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "output",
                    "uuid": "66835fb0-4877-4eee-930d-16648eb8cfe5"
                }
            ]
        },
        "1": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 1,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 290.6999969482422,
                "height": 82.19999694824219,
                "left": 252.5,
                "right": 452.5,
                "top": 208.5,
                "width": 200,
                "x": 252.5,
                "y": 208.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"echo \\\"Hello $1\\\"\"}}, \"help_text\": \"**What it Does**\\nA bash script Hello World in Galaxy generated by the ToolFactory\", \"install\": \"false\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"Hello_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"say_hello_to\", \"ap_type\": {\"param_type\": \"text\", \"__current_case__\": 0, \"param_value\": \"ToolFactory!!\"}, \"param_label\": \"Say hello to\", \"param_help\": \"\", \"param_CL\": \"1\", \"param_CLprefixed\": \"\", \"param_repeat\": \"false\"}]}}}, \"run_test\": \"true\", \"tool_desc\": \"Says Hello!\", \"tool_name\": \"hello_toolshed\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "abee7591-9d6e-42c1-a90a-f07d400d4d34",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "54bad770-39a7-421f-9025-c753010dfd78"
                }
            ]
        },
        "2": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 2,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": -174.3000030517578,
                "height": 82.19999694824219,
                "left": 252.5,
                "right": 452.5,
                "top": -256.5,
                "width": 200,
                "x": 252.5,
                "y": -256.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"swi-prolog\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"swipl -q -g main -s \", \"dynScript\": \"parent(pam,bob).\\nparent(tom,bob).\\nparent(tom,liz).\\nparent(bob,ann).\\nparent(bob,pat).\\nparent(pat,jim).\\n\\nmain :-\\n    parent(X,jim),\\n    format('~a is the parent of jim~n', [X]),\\n    halt.\"}}, \"help_text\": \"**What it Does**\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"prolog_out\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"\", \"tool_name\": \"prolog_demo\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "79e15d7d-48d0-43c1-868f-01b99a7c09e4",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "43289e2c-7985-4af9-a1f1-cbcba4721099"
                }
            ]
        },
        "3": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 3,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": -174.3000030517578,
                "height": 82.19999694824219,
                "left": 530.5,
                "right": 730.5,
                "top": -256.5,
                "width": 200,
                "x": 530.5,
                "y": -256.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"# pathetic attempt at a malicious script in Galaxy\\n# it fails because the job execution environment gives write access to few places\\necho \\\"ls -la\\\"\\nls -la\\ncd /\\necho \\\"ls -la after changing to /\\\"\\nls -la\\ntouch \\\"foo_was.here\\\"\\necho \\\"ls -la in root after touch foo_was.here - foo_was_not.here more like it\\\"\\nls -la\\n\"}}, \"help_text\": \"**What it Does**\\nShows what you can't do with a bash script\\nCheck the tool stderr - it isn't captured but should be. Send code.\\nResults vary - in a biocontainer, you are root so can do anything.\\nIn a normal Galaxy, not so much.\\nThis is a very interesting way to see what a tool can do on your machine.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"evil_script_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"sim_size:0.05\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"Tries some naughty things\", \"tool_name\": \"evil_script_that_fails\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "c7044006-758b-490d-9d03-795423e83926",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "3723cf7a-5f6a-4bf3-a8d1-1a12e7aa5a92"
                }
            ]
        },
        "4": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 4,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": -174.3000030517578,
                "height": 82.19999694824219,
                "left": 808.5,
                "right": 1008.5,
                "top": -256.5,
                "width": 200,
                "x": 808.5,
                "y": -256.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"r-base\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"Rscript\", \"dynScript\": \"# demo\\nargs = commandArgs(trailingOnly=TRUE)\\nif (length(args)==0) {\\n   n_plots = 3 \\n} else {\\n   n_plots = as.integer(args[1]) }\\ndir.create('plots')\\nfor (i in 1:n_plots) {\\n    foo = runif(100)\\n    bar = rnorm(100)\\n    bar = foo + 0.05*bar\\n    pdf(paste('plots/yet',i,\\\"anotherplot.pdf\\\",sep='_'))\\n    plot(foo,bar,main=paste(\\\"Foo by Bar plot #\\\",i),col=\\\"maroon\\\", pch=3,cex=0.6)\\n    dev.off()\\n    foo = data.frame(a=runif(100),b=runif(100),c=runif(100),d=runif(100),e=runif(100),f=runif(100))\\n    bar = as.matrix(foo)\\n    pdf(paste('plots/yet',i,\\\"anotherheatmap.pdf\\\",sep='_'))\\n    heatmap(bar,main='Random Heatmap')\\n    dev.off()\\n}\\n\"}}, \"help_text\": \"**What it Does**\\nToolFactory demonstration of a collection to hide lots of outputs from a tool in a single history item to avoid clutter.\\nAs many random plots as you want.\\nViewable inside the resulting history collection\\nScript is responsible for writing all the appropriate outputs into a directory called the same name as the collection as shown here.\\nVery handy for things not useful downstream but useful for the user to review and study.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [], \"collection_outputs\": [{\"__index__\": 0, \"name\": \"plots\", \"kind\": \"list\", \"label\": \"Plots\", \"discover\": \"__name_and_ext__\"}]}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"nplot\", \"ap_type\": {\"param_type\": \"text\", \"__current_case__\": 0, \"param_value\": \"3\"}, \"param_label\": \"Number of random plots pairs to draw\", \"param_help\": \"\", \"param_CL\": \"1\", \"param_CLprefixed\": \"\", \"param_repeat\": \"false\"}]}}}, \"run_test\": \"true\", \"tool_desc\": \"Collection demonstration\", \"tool_name\": \"plotter\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "d20bb426-0dde-43d5-ab24-b5b7ee84e46e",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "3dc24d83-0dca-44b8-91d1-572bbfcc9988"
                }
            ]
        },
        "5": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 5,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "rgToolFactory2.py"
                }
            ],
            "label": "rgToolFactory2.py",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "bottom": 462.6999969482422,
                "height": 82.19999694824219,
                "left": 808.5,
                "right": 1008.5,
                "top": 380.5,
                "width": 200,
                "x": 808.5,
                "y": 380.5
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "19533e66-12bb-4643-afc7-b6f6d8cbf52d",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "output",
                    "uuid": "707526a2-07ed-4821-b21f-ec9d4b4f96d8"
                }
            ]
        },
        "6": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 6,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "phiX.fasta"
                }
            ],
            "label": "phiX.fasta",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "bottom": -63.69999694824219,
                "height": 61.80000305175781,
                "left": 1086.5,
                "right": 1286.5,
                "top": -125.5,
                "width": 200,
                "x": 1086.5,
                "y": -125.5
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "38197f31-bef0-40ad-a6fd-0b480e980461",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "output",
                    "uuid": "ec424843-cb86-4a43-baa4-b12f124bdddd"
                }
            ]
        },
        "7": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 7,
            "input_connections": {},
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": -174.3000030517578,
                "height": 82.19999694824219,
                "left": 1086.5,
                "right": 1286.5,
                "top": -256.5,
                "width": 200,
                "x": 1086.5,
                "y": -256.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"echo \\\"You chose $1\\\"\"}}, \"help_text\": \"**What it Does**\\nDemonstrates select parameters generated by ToolFactory forms\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"select_out\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"choose\", \"ap_type\": {\"param_type\": \"selecttext\", \"__current_case__\": 4, \"selectTexts\": [{\"__index__\": 0, \"select_text\": \"one\", \"select_value\": \"won\"}, {\"__index__\": 1, \"select_text\": \"two\", \"select_value\": \"too\"}, {\"__index__\": 2, \"select_text\": \"three\", \"select_value\": \"free\"}]}, \"param_label\": \"Choose\", \"param_help\": \"\", \"param_CL\": \"1\", \"param_CLprefixed\": \"\", \"param_repeat\": \"false\"}]}}}, \"run_test\": \"true\", \"tool_desc\": \"ToolFactory select demonstration\", \"tool_name\": \"select_test\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "a165afa0-eb2a-4b0e-a377-460e56e018d9",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "223564ff-1a02-4274-a5af-57d19a24d8ab"
                }
            ]
        },
        "8": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 8,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "bwa-mem-fastq1.fq"
                }
            ],
            "label": "bwa-mem-fastq1.fq",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "bottom": 300.6999969482422,
                "height": 82.19999694824219,
                "left": 1364.5,
                "right": 1564.5,
                "top": 218.5,
                "width": 200,
                "x": 1364.5,
                "y": 218.5
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "321167c8-8993-454e-8b2b-da89cd90173a",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "output",
                    "uuid": "6a8362b7-38ed-493d-8f65-b7f2a9f7fcae"
                }
            ]
        },
        "9": {
            "annotation": "",
            "content_id": null,
            "errors": null,
            "id": 9,
            "input_connections": {},
            "inputs": [
                {
                    "description": "",
                    "name": "bwa-mem-mt-genome.fa"
                }
            ],
            "label": "bwa-mem-mt-genome.fa",
            "name": "Input dataset",
            "outputs": [],
            "position": {
                "bottom": 420.6999969482422,
                "height": 82.19999694824219,
                "left": 1364.5,
                "right": 1564.5,
                "top": 338.5,
                "width": 200,
                "x": 1364.5,
                "y": 338.5
            },
            "tool_id": null,
            "tool_state": "{\"optional\": false}",
            "tool_version": null,
            "type": "data_input",
            "uuid": "62e4539a-27b5-4a4e-8fd1-1b77e388e520",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "output",
                    "uuid": "44368577-d995-49c7-b6ff-259516966afb"
                }
            ]
        },
        "10": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 10,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 0,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": -2.5,
                "height": 134,
                "left": 530.5,
                "right": 730.5,
                "top": -136.5,
                "width": 200,
                "x": 530.5,
                "y": -136.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"sbcl\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"sbcl --script $1\"}}, \"help_text\": \"**What it Does**\\nSays hello world using a trivial lisp script.\\nIt will actually try to run any text file you like from your history but likely fail unless they happen to be valid lisp according to the interpreter dependency.\\nThese demonstrations show what is possible, not what is sensible.\\nPlease don't expose this anywhere.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"SBCL Lisp script to execute\", \"input_help\": \"Provide a script in lisp to be interpreted by SBCL\", \"input_CL\": \"1\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"lisp_out\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"ToolFactory demonstration using Lisp for the nostalgic.\", \"tool_name\": \"lisp_demo\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "e1d466ff-f95a-426f-be7a-8f9c3edc0234",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "ada39eb6-33bd-4db5-b808-dc1c96d8852a"
                }
            ]
        },
        "11": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 11,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 1,
                    "output_name": "generated_xml"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 341.5,
                "height": 134,
                "left": 530.5,
                "right": 730.5,
                "top": 207.5,
                "width": 200,
                "x": 530.5,
                "y": 207.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"planemo=0.74.3, python=3.7, lxml=4.6.3\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"python\", \"dynScript\": \"## python version of a planemo XML linter\\nimport lxml.etree as ET\\nimport os\\nimport subprocess\\nimport sys\\n\\ndef main():\\n    assert len(sys.argv) >= 2, 'Must have input xml on command line'\\n    xmlin = sys.argv[1]\\n    tree = ET.parse(xmlin)\\n    root = tree.getroot()\\n    toolname = root.get('id')\\n    toolxml = os.path.join('/export/galaxy/tools/TFtools', toolname, '%s.xml' % toolname)\\n    cl = ['planemo', 'lint', toolxml]\\n    print('Running', cl)\\n    p = subprocess.run(cl, shell=False)\\n    if p.returncode > 0:\\n         print('Planemo lint call returned error %d')\\n    else:\\n         print('Lint report ends')\\nmain()\\n\"}}, \"help_text\": \"**What it Does**\\nToolFactory demonstration script using python to run planemo lint from a ToolFactory generated XML\\nCompare with the simpler bash version.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"xml\"], \"input_label\": \"Toolshed XML to be linted\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"lint_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:5\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"Planemo lint using python on a ToolFactory generated XML\", \"tool_name\": \"planemo_lint_python\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "70a8b50b-ed34-407f-b254-4bae7436e105",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "0b5c0d43-bf89-4588-8d17-5e731c2e7024"
                }
            ]
        },
        "12": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 12,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 1,
                    "output_name": "generated_xml"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 513.5,
                "height": 134,
                "left": 530.5,
                "right": 730.5,
                "top": 379.5,
                "width": 200,
                "x": 530.5,
                "y": 379.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"planemo=0.74.3\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"cp $1 ./testme.xml\\n# planemo will only lint a file with xml extension\\nplanemo lint \\\"./testme.xml\\\"  \\necho 'Lint report ends'\"}}, \"help_text\": \"**What it Does**\\nToolFactory demonstration script using bash to run planemo lint using bash\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"xml\"], \"input_label\": \"Toolshed XML to be linted\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"lint_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:4\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"Runs Planemo lint on a ToolFactory generated XML file\", \"tool_name\": \"planemo_lint_bash\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "6592d634-6737-413c-80fe-c7cfc101e614",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "0910e8f2-230c-44ca-b68b-27b9a8765b6a"
                }
            ]
        },
        "13": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 13,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 5,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 341.5,
                "height": 134,
                "left": 1086.5,
                "right": 1286.5,
                "top": 207.5,
                "width": 200,
                "x": 1086.5,
                "y": 207.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"python\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"python\", \"dynScript\": \"## reverse order of text by row\\n## ToolFactory demonstration\\n## positional parameters\\nimport sys\\ninp = sys.argv[1]\\noutp = sys.argv[2]\\ni = open(inp,'r').readlines()\\no = open(outp,'w')\\nfor row in i:\\n  rs = row.rstrip()\\n  rs = list(rs)\\n  rs.reverse()\\n  o.write(''.join(rs))\\n  o.write('\\\\n')\\no.close()\"}}, \"help_text\": \"**What it Does**\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"Input text file to be reversed\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"pyrev_positionalparse_output\", \"history_format\": \"txt\", \"history_CL\": \"2\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"\", \"tool_name\": \"pyrev_pos_test\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "8f5b427c-dfe7-4b4e-9c1c-def788d047e0",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "64c3ed21-2206-45a3-b601-9106796810ed"
                }
            ]
        },
        "14": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 14,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 5,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 513.5,
                "height": 134,
                "left": 1086.5,
                "right": 1286.5,
                "top": 379.5,
                "width": 200,
                "x": 1086.5,
                "y": 379.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"python\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"python\", \"dynScript\": \"# reverse order of text by row\\nimport argparse\\nparser = argparse.ArgumentParser()\\na = parser.add_argument\\na('--infile',default='')\\na('--pyrevargparse_outfile',default=None)\\nargs = parser.parse_args()\\ninp = args.infile\\noutp = args.pyrevargparse_outfile\\ni = open(inp,'r').readlines()\\no = open(outp,'w')\\nfor row in i:\\n  rs = row.rstrip()\\n  rs = list(rs)\\n  rs.reverse()\\n  o.write(''.join(rs))\\n  o.write('\\\\n')\\no.close()\"}}, \"help_text\": \"**What it Does**\\nDemonstrates argparse - script must correctly parse the names given on the form for this to work.\\nArgparse argument names your script should expect are constructed according to the parameter type - please read the tool form carefully.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"argparse\", \"__current_case__\": 0, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"input file to be reversed\", \"input_help\": \"\", \"input_CL\": \"infile\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"pyrevargparse_outfile\", \"history_format\": \"txt\", \"history_CL\": \"pyrevargparse_outfile\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"ToolFactory demonstration python script with argparse parameters\", \"tool_name\": \"pyrev_argparse_test\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "96b88c41-c76f-485e-ad8b-2345a9a86b52",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "c8e0b8ad-df1b-4eab-bfaa-147fd7258c4d"
                }
            ]
        },
        "15": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 15,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 5,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 685.5,
                "height": 134,
                "left": 1086.5,
                "right": 1286.5,
                "top": 551.5,
                "width": 200,
                "x": 1086.5,
                "y": 551.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"tac | rev\"}}, \"help_text\": \"**What it Does**\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"0\", \"__current_case__\": 2, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"Input text file to be reversed\", \"input_help\": \"\", \"input_CL\": \"STDIN\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"tacrev_reversed_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"\", \"tool_name\": \"tacrev\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "aa77dbe0-a0f3-4e01-87fc-2ac4b750ffde",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "2a8d5eea-e3d4-49f9-a4d1-aaae1c882c42"
                }
            ]
        },
        "16": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 16,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 6,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 169.5,
                "height": 134,
                "left": 1364.5,
                "right": 1564.5,
                "top": 35.5,
                "width": 200,
                "x": 1364.5,
                "y": 35.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"perl\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"perl\", \"dynScript\": \"#!/usr/bin/perl -w\\n\\n# usage : perl toolExample.pl <FASTA file> <output file>\\n\\nopen (IN, \\\"<$ARGV[0]\\\");\\nopen (OUT, \\\">$ARGV[1]\\\");\\nwhile (<IN>) {\\n    chop;\\n    if (m/^>/) {\\n        s/^>//;\\n        if ($. > 1) {\\n            print OUT sprintf(\\\"%.3f\\\", $gc/$length) . \\\"\\\\n\\\";\\n        }\\n        $gc = 0;\\n        $length = 0;\\n    } else {\\n        ++$gc while m/[gc]/ig;\\n        $length += length $_;\\n    }\\n}\\nprint OUT sprintf(\\\"%.3f\\\", $gc/$length) . \\\"\\\\n\\\";\\nclose( IN );\\nclose( OUT );\"}}, \"help_text\": \"**What it Does**\\nPerl is also possible.\\nIt is also hard to maintain but we are a welcoming community so have it your way if you must.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fasta\"], \"input_label\": \"Input fasta for GC estimate\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"perl_gc_output\", \"history_format\": \"txt\", \"history_CL\": \"2\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"Perl script demonstration\", \"tool_name\": \"perl_gc_counter\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "e7a735bc-f490-4759-a1f3-04837d542a66",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "0508e9b2-8a1b-4661-b27b-540a512c69c6"
                }
            ]
        },
        "17": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 17,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 6,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": -2.5,
                "height": 134,
                "left": 1364.5,
                "right": 1564.5,
                "top": -136.5,
                "width": 200,
                "x": 1364.5,
                "y": -136.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"sed\", \"usescript\": {\"choosescript\": \"no\", \"__current_case__\": 0, \"dynScript\": \"\", \"scriptrunner\": \"\"}}, \"help_text\": \"**What it Does**\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"txt\"], \"input_label\": \"Input text to be edited\", \"input_help\": \"\", \"input_CL\": \"2\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"sedtest_edited_output\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:0\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"sedstring\", \"ap_type\": {\"param_type\": \"text\", \"__current_case__\": 0, \"param_value\": \"s/A/Abjork!/g\"}, \"param_label\": \"sed edit string - subsitute some text for some other text globally\", \"param_help\": \"\", \"param_CL\": \"1\", \"param_CLprefixed\": \"\", \"param_repeat\": \"false\"}]}}}, \"run_test\": \"false\", \"tool_desc\": \"\", \"tool_name\": \"sedtest_toolshed\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "dfcc4cd0-75a8-4e43-a174-a02bd2b1824f",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "29424a1e-e73a-433a-8103-c3f0d57319c9"
                }
            ]
        },
        "18": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 18,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 9,
                    "output_name": "output"
                },
                "io_param|ppass|io|history_inputs_1|input_files": {
                    "id": 8,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 433.1000061035156,
                "height": 225.60000610351562,
                "left": 1652.5,
                "right": 1852.5,
                "top": 207.5,
                "width": 200,
                "x": 1652.5,
                "y": 207.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"bwa=0.7.15, samtools=1.3\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"bash\", \"dynScript\": \"REFFILE=$1\\nFASTQ=$2\\nBAMOUT=$3\\nrm -f \\\"refalias\\\"\\nln -s \\\"$REFFILE\\\" \\\"refalias\\\"\\nbwa index -a is \\\"refalias\\\"\\nbwa mem -t \\\"2\\\"  -v 1 \\\"refalias\\\" \\\"$FASTQ\\\"  > tempsam\\nsamtools view -Sb tempsam > temporary_bam_file.bam\\nsamtools sort -o \\\"$BAMOUT\\\" temporary_bam_file.bam\\n\"}}, \"help_text\": \"**What it Does**\\nSame thing as the command over-ride version but using a bash script and passing parameters.\\nProbably more familiar to many non-Galaxy developers.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"positional\", \"__current_case__\": 1, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fasta\"], \"input_label\": \"Reference sequence to map reads against\", \"input_help\": \"\", \"input_CL\": \"1\", \"input_repeat\": \"false\"}, {\"__index__\": 1, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fastq\"], \"input_label\": \"Reads to map\", \"input_help\": \"\", \"input_CL\": \"2\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"bwa_test_bash_output\", \"history_format\": \"bam\", \"history_CL\": \"3\", \"history_test\": \"sim_size:0.1\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"Bash script equivalent of the bwa command over-ride.\", \"tool_name\": \"bwa_test_toolfactory_positional_bash\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "dddc1f24-46e4-427b-a694-3424f950b6c9",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "c98472dc-48d3-42b7-9908-4451b9256126"
                }
            ]
        },
        "19": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 19,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 9,
                    "output_name": "output"
                },
                "io_param|ppass|io|history_inputs_1|input_files": {
                    "id": 8,
                    "output_name": "output"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 676.6999969482422,
                "height": 205.1999969482422,
                "left": 1652.5,
                "right": 1852.5,
                "top": 471.5,
                "width": 200,
                "x": 1652.5,
                "y": 471.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"__workflow_invocation_uuid__\": \"b916d106c04111ebba7d0242ac160004\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"yes\", \"__current_case__\": 1, \"command_override\": \"## Build reference\\n#set $reference_fasta_filename = \\\"localref.fa\\\"\\nln -s \\\"${ref_file}\\\" \\\"${reference_fasta_filename}\\\" ;\\nbwa index -a is \\\"${reference_fasta_filename}\\\" ;\\nbwa mem -t \\\"\\\\${GALAXY_SLOTS:-4}\\\" -v 1 \\\"${reference_fasta_filename}\\\" \\\"${fastq_input1}\\\"  | samtools view -Sb - > temporary_bam_file.bam ;\\nsamtools sort -o \\\"${bwa_test_commover_bam_output}\\\" temporary_bam_file.bam\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"bwa=0.7.15, samtools=1.3\", \"usescript\": {\"choosescript\": \"no\", \"__current_case__\": 0, \"dynScript\": \"\", \"scriptrunner\": \"\"}}, \"help_text\": \"**What it Does**\\nTrivial example from a Planemo documentation example\\nIt can be useful. It is sort of bash with substitutions from the tool form.\\nIf you need it, it's here.\", \"install\": \"true\", \"io_param\": {\"ppass\": {\"parampass\": \"argparse\", \"__current_case__\": 0, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fasta\"], \"input_label\": \"Reference sequence to align reads\", \"input_help\": \"\", \"input_CL\": \"ref_file\", \"input_repeat\": \"false\"}, {\"__index__\": 1, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"fastqsanger\"], \"input_label\": \"Fastqsanger file containing reads to be mapped against reference\", \"input_help\": \"\", \"input_CL\": \"fastq_input1\", \"input_repeat\": \"false\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"bwa_test_commover_bam_output\", \"history_format\": \"bam\", \"history_CL\": \"\", \"history_test\": \"sim_size:0.1\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": []}}}, \"run_test\": \"true\", \"tool_desc\": \"Command over-ride demonstration\", \"tool_name\": \"bwa_test_command_override\", \"tool_version\": \"0.01\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "9a14b360-eb98-4938-84cf-9dfd5ae4bef6",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "bcd8c6dd-11ba-4397-af9d-f25608b5d5e2"
                }
            ]
        },
        "20": {
            "annotation": "",
            "content_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "errors": null,
            "id": 20,
            "input_connections": {
                "io_param|ppass|io|history_inputs_0|input_files": {
                    "id": 10,
                    "output_name": "generated_xml"
                }
            },
            "inputs": [],
            "label": null,
            "name": "toolfactory",
            "outputs": [
                {
                    "name": "generated_xml",
                    "type": "xml"
                }
            ],
            "position": {
                "bottom": 22.5,
                "height": 134,
                "left": 808.5,
                "right": 1008.5,
                "top": -111.5,
                "width": 200,
                "x": 808.5,
                "y": -111.5
            },
            "post_job_actions": {},
            "tool_id": "toolshed.g2.bx.psu.edu/repos/fubar_too/toolfactory/rgtf2/2.00",
            "tool_shed_repository": {
                "changeset_revision": "372903c598a8",
                "name": "toolfactory",
                "owner": "fubar_too",
                "tool_shed": "toolshed.g2.bx.psu.edu"
            },
            "tool_state": "{\"__input_ext\": \"input\", \"chromInfo\": \"/galaxy/tool-data/shared/ucsc/chrom/?.len\", \"citations\": [], \"cl_suffix\": \"\", \"cover\": {\"commover\": \"no\", \"__current_case__\": 0, \"command_override\": \"\", \"test_override\": \"\"}, \"deps\": {\"packages\": \"\", \"usescript\": {\"choosescript\": \"yes\", \"__current_case__\": 1, \"scriptrunner\": \"python\", \"dynScript\": \"import argparse\\nparser = argparse.ArgumentParser()\\na = parser.add_argument\\na(\\\"--mi\\\", action=\\\"append\\\")\\na(\\\"--mp\\\", action=\\\"append\\\")\\nargs = parser.parse_args()\\nif args.mi:\\n   print(\\\" file and \\\".join(args.mi))\\nif args.mp:\\n   print(\\\" string and \\\".join(args.mp))\\nif not (args.mi or args.mp):\\n   print('Nothing was selected')\"}}, \"help_text\": \"**What it Does**\\nSimple python Argparse sample to echo repeated user selections - how to use repeated inputs and user parameters.\\nUnpredictable or messy \\\"repeated\\\" outputs can use a collection if they are not useful downstream but otherwise require manual wrapping - see the GTN advanced tutorial.\", \"install\": null, \"io_param\": {\"ppass\": {\"parampass\": \"argparse\", \"__current_case__\": 0, \"io\": {\"history_inputs\": [{\"__index__\": 0, \"input_files\": {\"__class__\": \"ConnectedValue\"}, \"input_formats\": [\"html\", \"txt\", \"xml\"], \"input_label\": \"Multiple input files from your history - as many as you like\", \"input_help\": \"\", \"input_CL\": \"mi\", \"input_repeat\": \"true\"}], \"history_outputs\": [{\"__index__\": 0, \"history_name\": \"repeats_out\", \"history_format\": \"txt\", \"history_CL\": \"STDOUT\", \"history_test\": \"diff:6\"}], \"collection_outputs\": []}, \"addparam\": {\"edit_params\": \"yes\", \"additional_parameters\": [{\"__index__\": 0, \"param_name\": \"mp\", \"ap_type\": {\"param_type\": \"text\", \"__current_case__\": 0, \"param_value\": \"Multiple user supplied text strings - as many different ones as you like\"}, \"param_label\": \"Multiple user supplied text strings - as many different ones as you like\", \"param_help\": \"\", \"param_CL\": \"mp\", \"param_CLprefixed\": \"\", \"param_repeat\": \"true\"}]}}}, \"run_test\": null, \"tool_desc\": \"Repeated parameter demonstration\", \"tool_name\": \"repeats_demo\", \"tool_version\": \"2.00\", \"__page__\": null, \"__rerun_remap_job_id__\": null}",
            "tool_version": "2.00",
            "type": "tool",
            "uuid": "324650e1-ec4f-4794-99f1-3dbd4fee739e",
            "workflow_outputs": [
                {
                    "label": null,
                    "output_name": "generated_xml",
                    "uuid": "0b5e627c-0304-452d-b195-a39740bf8f8a"
                }
            ]
        }
    },
    "tags": [],
    "uuid": "3239fcd0-bb5b-46a4-9e66-9948ec283c79",
    "version": 1
}
